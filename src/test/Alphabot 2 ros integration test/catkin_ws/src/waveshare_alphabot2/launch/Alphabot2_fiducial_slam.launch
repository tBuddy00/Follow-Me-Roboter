<!--
    This launch file runs the Waveshare Alphabot 2 Robot ROS nodes.
-->

<launch>
    <!-- Default ROS output location, set this to 'log' to write stdout to a log file instead of the screen -->
    <arg name="output" default="screen" doc="ROS stdout output location (log/screen)"/>
    
    <include file="$(find waveshare_alphabot2)/launch/Alphabot2.launch" />

    <!--include file="$(find fiducial_slam)/launch/fiducial_slam.launch" /-->
    <arg name="camera" default="/raspicam_node"/>
    <arg name="map_frame" default="map"/>
    <arg name="odom_frame" default="odom"/>
    <arg name="base_frame" default="base_link"/>
    <arg name="publish_tf" default="true"/>
    <arg name="tf_publish_interval" default="0.1"/>
    <arg name="future_date_transforms" default="0.0"/>
    <arg name="publish_6dof_pose" default="false"/>
    <arg name="fiducial_len" default="0.14"/>
    <arg name="systematic_error" default="0.01"/>
    <arg name="do_pose_estimation" default="false"/>
    <arg name="covariance_diagonal" default="[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"/>
    <arg name="read_only_map" default="false"/>

    <include file="$(find aruco_detect)/launch/aruco_detect.launch"/>
    <node type="fiducial_slam" pkg="fiducial_slam" output="screen" name="fiducial_slam">
        <!-- We're creating a new map so clear the old map -->
        <param name="map_file" value="$(env HOME)/.ros/slam/map.txt" />
        <param name="map_frame" value="$(arg map_frame)" />
        <param name="odom_frame" value="$(arg odom_frame)" />
        <param name="base_frame" value="$(arg base_frame)" />
        <param name="publish_tf" value="$(arg publish_tf)" />
        <param name="tf_publish_interval" value="$(arg tf_publish_interval)" />
        <param name="future_date_transforms" value="$(arg future_date_transforms)" />
        <param name="publish_6dof_pose" value="$(arg publish_6dof_pose)" />
        <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
        <param name="sum_error_in_quadrature" value="true"/>
        <param name="fiducial_len" value="$(arg fiducial_len)"/>
        <param name="covariance_diagonal" value="$(arg covariance_diagonal)"/>
        <param name="read_only_map" value="$(arg read_only_map)"/>
        <remap from="/camera_info" to="$(arg camera)/camera_info"/>
    </node>
    <node type="move_basic" pkg="move_basic" output="screen" name="move_basic" />
</launch>